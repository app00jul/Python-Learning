class tank:
    def __init__(self, name, country):
        self.name = name
        self.country = country

    def identify(self):
        print(f"{self.name} is a tank from {self.country}")

    def ride(self):
        print(f"{self.name} is moving.")

    def shoot(self):
        print(f"{self.name} is shooting.")

abrams = tank("M1A2 Abrams", "America")
print(f"{abrams.name}")
print(f"{abrams.country}")
abrams.shoot()
abrams.ride()

9.1: Restaurant.
class restaurant:
    def __init__(self, name, cuisine):
        self.name = name
        self. cuisine = cuisine

    def describe_restaurant(self):
        print(f"{self.name} is a/an {self.cuisine} restaurant.")

    def open_restaurant(self):
        print(f"{self.name} is opened.")

phoOne = restaurant("Pho One 24", "Vietnamese")

print(phoOne.name)
print(phoOne.cuisine)

phoOne.describe_restaurant()
phoOne.open_restaurant()

9.2: Three Restaurants.
class restaurant:
    def __init__(self, name, cuisine):
        self.name = name
        self. cuisine = cuisine

    def describe_restaurant(self):
        print(f"{self.name} is a/an {self.cuisine} restaurant.")

    def open_restaurant(self):
        print(f"{self.name} is opened.")

phoOne = restaurant("Pho One 24", "Vietnamese")
seoul = restaurant("Seoul", "Korean")
tanpopo = restaurant("Tanpopo Ramen & Sushi", "Japanese")

print(f"\n{phoOne.name}")
print(f"{phoOne.cuisine}")
phoOne.describe_restaurant()
phoOne.open_restaurant()

print(f"\n{seoul.name}")
print(f"{seoul.cuisine}")
seoul.describe_restaurant()
seoul.open_restaurant()

print(f"\n{tanpopo.name}")
print(f"{tanpopo.cuisine}")
tanpopo.describe_restaurant()
tanpopo.open_restaurant()

9.3: Users.
class users:
    def __init__(self, first_name, last_name, age, location):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age
        self.location = location

    def describe_user(self):
        full_name = f"{self.first_name} {self.last_name}"
        print(f"\n{full_name}")
        print(f"User's age: {self.age}.")
        print(f"The user lives in {self.location}.")

    def greet(self):
        print(f"Hello {self.first_name},welcome to the program!")

"""DATA ABOUT THE FIRST USER"""
app00jul = users("Jul", "Vu", "18", "Wisconsin")
print(app00jul.first_name)
print(app00jul.last_name)
print(app00jul.age)
print(app00jul.location)

app00jul.describe_user()
app00jul.greet()

9.4: Number Served.
class restaurant:
    def __init__(self, name, cuisine):
        self.name = name
        self. cuisine = cuisine
        self.served = 0

    def describe_restaurant(self):
        print(f"{self.name} is a/an {self.cuisine} restaurant.")

    def open_restaurant(self):
        print(f"{self.name} is opened.")

    def set_number_served(self, served):
        if served >= self.served:
            self.served = served
            print(f"We have served extra {self.served} people.")
        else:
            print("You cannot roll back the number of served customers.")

    def increment_number_served(self, served):
        self.served += served

    def read_served(self):
        print(f"The total number of servings today is {self.served}.")

phoOne24 = restaurant("Pho One 24", "Vietnamese")

phoOne24.describe_restaurant()
phoOne24.open_restaurant()

phoOne24.set_number_served(12)
phoOne24.read_served()

phoOne24.increment_number_served(30)
phoOne24.read_served()

9.5: Login Attempts.
class users:
    def __init__(self, first_name, last_name, age, location):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age
        self.location = location
        self.login_attempt = 0

    def describe_user(self):
        full_name = f"{self.first_name} {self.last_name}"
        print(f"\n{full_name}")
        print(f"User's age: {self.age}.")
        print(f"The user lives in {self.location}.")

    def greet(self):
        print(f"Hello {self.first_name},welcome to the program!")

    def increment_login_attempt(self):
        self.login_attempt += 1
        print(f"Your current login attempts are {self.login_attempt}")

    def reset_login_attempt(self):
        self.login_attempt = 0
        print(f"Your login attempt has been reset {self.login_attempt}.")

"""DATA ABOUT THE FIRST USER"""
app00jul = users("Jul", "Vu", "18", "Wisconsin")
print(app00jul.first_name)
print(app00jul.last_name)
print(app00jul.age)
print(app00jul.location)

app00jul.describe_user()
app00jul.greet()

app00jul.increment_login_attempt()
app00jul.increment_login_attempt()
app00jul.reset_login_attempt()

9.6: Ince Cream Stand.
class Restaurant:
    def __init__(self, name, cuisine):
        self.name = name
        self. cuisine = cuisine
        self.served = 0

    def describe_restaurant(self):
        print(f"{self.name} is a/an {self.cuisine} restaurant.")

    def open_restaurant(self):
        print(f"{self.name} is opened.")

    def set_number_served(self, served):
        if served >= self.served:
            self.served = served
            print(f"We have served extra {self.served} people.")
        else:
            print("You cannot roll back the number of served customers.")

    def increment_number_served(self, served):
        self.served += served

    def read_served(self):
        print(f"The total number of servings today is {self.served}.")

class IceCreamStand(Restaurant):
    def __init__(self, name, cuisine):
        super().__init__(name, cuisine)

    def favor(self):
        favors =  ["Vanilla", "Chocolate",
                  "Mint", "Watermelon",
                  "Banana", "Strawberry"]
        print("\nHere are all the favor in the Ice Cream Stand:")
        for favor in favors:
            print(f"\t{favor}")

CheesecakeFactory = IceCreamStand("Cheescake Factory", "Cheesecake")
CheesecakeFactory.describe_restaurant()
CheesecakeFactory.favor()

9.7: Admin.
class Users:
    def __init__(self, first_name, last_name, age, location):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age
        self.location = location
        self.login_attempt = 0

    def describe_user(self):
        full_name = f"{self.first_name} {self.last_name}"
        print(f"\n{full_name}")
        print(f"User's age: {self.age}.")
        print(f"The user lives in {self.location}.")

    def greet(self):
        print(f"Hello {self.first_name},welcome to the program!")

    def increment_login_attempt(self):
        self.login_attempt += 1
        print(f"Your current login attempts are {self.login_attempt}")

    def reset_login_attempt(self):
        self.login_attempt = 0
        print(f"Your login attempt has been reset {self.login_attempt}.")

class Admin(Users):
    def __init__(self, first_name, last_name, age, location):
        super().__init__(first_name, last_name, age, location)
        self.privileges = ["can add post", "can delete post",
                           "can see the list of user", "can ban post",
                           "add new users", "remove users"]

    def show_privileges(self):
        print("Here are the Admin's privileges:")
        for privilege in self.privileges:
            print(f"\t- {privilege.title()}")

"""DATA ABOUT THE FIRST USER"""
app00jul = Admin("Julian", "Vu", "18", "Milwaukee")
app00jul.show_privileges()

9.8: Privileges.
